name: Backend CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # PostgreSQL Service
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Vkhn2W3LudKzzis
          POSTGRES_DB: app_presente
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Redis Service
      redis:
        image: redis/redis-stack-server:latest
        env:
          REDIS_ARGS: "--requirepass redis"
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli -a redis ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        working-directory: ./backend/src
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # Ensure pytest is installed

      - name: Run Backend Tests
        working-directory: ./backend/src
        env:
          DATABASE_LOGIN: postgres
          DATABASE_PASS: Vkhn2W3LudKzzis
          DATABASE_IP: localhost
          SECRET_KEY: qualquercoisa
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          REDIS_PASSWORD: redis
          DEBUG: True
        run: pytest tests/ -v

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend Docker Image
        run: docker build -t presente-backend ./backend/src
